// @generated by Cursor AI (Claude) — verified by Kevin Mendy

import { useState } from 'react';
import { useTranslation } from 'react-i18next';
import { toast } from 'sonner';
import { Button } from '@/components/ui/button';
import { Download, Filter } from 'lucide-react';
import ReportTable from '@/components/admin/ReportTable';
import { useAdminReports } from '@/hooks/useAdminReports';
import * as exportService from '@/services/exportService';

/**
 * Page GlobalReports
 * Affiche TOUS les signalements (toutes communes)
 * - Filtres avancés (TODO: à implémenter)
 * - Table tri-able
 * - Pagination
 * - Export CSV
 */
function GlobalReports() {
  const { t } = useTranslation('admin');

  // Filtres (pour l'instant vide, sera amélioré)
  const [filters] = useState({});

  // Récupérer tous les signalements
  const { reports, loading, error } = useAdminReports(filters);

  /**
   * Exporter en CSV
   */
  const handleExport = () => {
    if (!reports || reports.length === 0) {
      toast.warning('Aucun signalement à exporter');
      return;
    }

    // Colonnes par défaut
    const selectedColumns = ['id', 'commune_name', 'type', 'description', 'status', 'priority', 'created_at', 'citizen_name', 'latitude', 'longitude'];

    // Générer CSV
    const csv = exportService.exportToCSVCustom(reports, selectedColumns);

    if (csv) {
      // Télécharger
      exportService.downloadCSV(csv, `signalements-all-${new Date().toISOString().split('T')[0]}.csv`);
      console.log('✅ Export CSV lancé');
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-neutral-900">
            {t('reports.title', { defaultValue: 'Tous les Signalements' })}
          </h1>
          <p className="text-neutral-600 mt-1">
            {t('reports.subtitle', { defaultValue: 'Gérer tous les signalements de toutes les communes' })}
          </p>
        </div>

        <div className="flex items-center gap-2">
          {/* TODO: Bouton filtres avancés */}
          {/* <Button variant="outline" className="flex items-center gap-2">
            <Filter className="w-4 h-4" />
            {t('reports.filters', { defaultValue: 'Filtres' })}
          </Button> */}

          {/* Bouton export */}
          <Button
            onClick={handleExport}
            disabled={loading || !reports || reports.length === 0}
            className="flex items-center gap-2"
          >
            <Download className="w-4 h-4" />
            {t('reports.export', { defaultValue: 'Exporter CSV' })}
          </Button>
        </div>
      </div>

      {/* Compteur signalements */}
      {!loading && reports && (
        <div className="bg-primary-50 border-2 border-primary-200 rounded-lg p-4">
          <p className="text-primary-900 font-medium">
            {reports.length} signalement{reports.length > 1 ? 's' : ''} trouvé{reports.length > 1 ? 's' : ''}
          </p>
        </div>
      )}

      {/* Erreur */}
      {error && (
        <div className="bg-red-50 border-2 border-red-200 rounded-lg p-4">
          <p className="text-red-800 font-medium">{error}</p>
        </div>
      )}

      {/* Table */}
      <ReportTable reports={reports} loading={loading} />
    </div>
  );
}

export default GlobalReports;

